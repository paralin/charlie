package charlie;
import "charlie.proto";
option optimize_for = LITE_RUNTIME;

enum EMsg
{
// Server sends an identify
// Client responds with identify
  EMsgIdentify = 1;
// Server responds with accept & challenge response
// Client responds with accept
  EMsgAccept = 3;

  EMsgKeepalive = 6;
  // Message to be targeted at a module
  EMsgRoutedMessage = 5;

  EMsgFailure = 9999;
}

message CMessageTarget
{
  optional uint32 target_module = 1;
  optional uint32 emsg = 2;
  optional uint32 job_id = 3;
}

// Changes
// - Moved a lot into CMessageHeader
// - Body is just the body (previously rsa_body)
message CMessageHeader
{
  optional EMsg emsg = 1;
  optional uint32 timestamp = 2;
  optional bytes timestamp_signature = 3;
  optional CMessageTarget target = 4;
  optional bytes signature = 5;
  optional uint32 body_size = 6;
}

// CMessageBody removed in favor of just placing the contents there

enum ENetFailure
{
  FAILURE_MODULE_NOTFOUND = 1;
  FAILURE_EXCEPTION_RAISED = 2;
}

message CNetFailure
{
  optional ENetFailure fail_type = 1;
  optional string error_message = 2;
}

message CNetIdentify
{
  optional bytes pubkey = 1;
  optional string challenge = 2;
  optional bytes challenge_response = 3;
}

message CNetAccept
{
  optional bytes challenge_response = 1;
}

message CKeepAlive
{
}
